<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.21.0822.1058                               -->
<workbook original-version='18.1' source-build='2020.2.17 (20202.21.0822.1058)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-style' value='as-synced' />
      <format attr='animation-duration' value='0.30000001192092896' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='new_gapminder' inline='true' name='federated.08qhhv318ptzii14anydd1p4hn91' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='new_gapminder' name='textscan.0cnmu3609aa52015reool18tft6r'>
            <connection class='textscan' directory='C:/Users/ganiy/OneDrive/Documents/Global-Analysis' filename='new_gapminder.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0cnmu3609aa52015reool18tft6r' name='new_gapminder.csv' table='[new_gapminder#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='Life_expectancy' ordinal='2' />
            <column datatype='integer' name='Income' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='string' name='Continent' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0cnmu3609aa52015reool18tft6r' name='new_gapminder.csv' table='[new_gapminder#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='Life_expectancy' ordinal='2' />
            <column datatype='integer' name='Income' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='string' name='Continent' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life_expectancy]</local-name>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias>Life_expectancy</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[new_gapminder.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranking' datatype='integer' name='[Calculation_796292759834755072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Population]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Life expectancy' datatype='real' name='[Life_expectancy]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[year]' filter-group='2'>
        <groupfilter from='1800' function='range' level='[year]' to='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0cnmu3609aa52015reool18tft6r' name='new_gapminder.csv' table='[new_gapminder#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='Life_expectancy' ordinal='2' />
                  <column datatype='integer' name='Income' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='string' name='Continent' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Countries with the highest population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='TechnicBold' fontsize='18'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='new_gapminder' name='federated.08qhhv318ptzii14anydd1p4hn91' />
          </datasources>
          <datasource-dependencies datasource='federated.08qhhv318ptzii14anydd1p4hn91'>
            <column caption='Ranking' datatype='integer' name='[Calculation_796292759834755072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Population]), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_796292759834755072]' derivation='User' name='[usr:Calculation_796292759834755072:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.08qhhv318ptzii14anydd1p4hn91].[country]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_796292759834755072]' derivation='User' name='[usr:Calculation_796292759834755072:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.08qhhv318ptzii14anydd1p4hn91].[country]' ordering-type='Field' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.08qhhv318ptzii14anydd1p4hn91].[usr:Calculation_796292759834755072:qk:3]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.08qhhv318ptzii14anydd1p4hn91].[usr:Calculation_796292759834755072:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.08qhhv318ptzii14anydd1p4hn91].[sum:Population:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.08qhhv318ptzii14anydd1p4hn91].[usr:Calculation_796292759834755072:ok:1]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08qhhv318ptzii14anydd1p4hn91].[none:country:nk]' />
              <text column='[federated.08qhhv318ptzii14anydd1p4hn91].[none:country:nk]' />
              <text column='[federated.08qhhv318ptzii14anydd1p4hn91].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08qhhv318ptzii14anydd1p4hn91].[usr:Calculation_796292759834755072:ok:1]</rows>
        <cols>[federated.08qhhv318ptzii14anydd1p4hn91].[sum:Population:qk]</cols>
        <pages>
          <column>[federated.08qhhv318ptzii14anydd1p4hn91].[none:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{4ED2A555-0F9B-4660-AB2E-DF44B6919A0B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Top 10 most populated countries in the world from 1800 to 2021'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='TechnicBold' fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#fbf7fb' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#f2f6f7' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='22' param='horz' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='10' param='vert' w='99002' x='499' y='978'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='41' h='5990' id='11' is-fixed='true' w='99002' x='499' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92054' id='7' param='horz' w='99002' x='499' y='6968'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92054' id='5' w='99002' x='499' y='6968'>
                  <zone h='92054' id='3' name='Countries with the highest population' w='99002' x='499' y='6968'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' dropdown='0' h='4156' id='8' name='Countries with the highest population' show-title='false' synchronized='1' trailctrls='0' w='19763' x='79613' y='3178' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontname='TechnicBold' fontsize='16'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='26' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='25' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='41' h='5990' id='11' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92054' id='3' is-fixed='true' name='Countries with the highest population' w='99002' x='499' y='6968'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' dropdown='0' h='4156' id='8' name='Countries with the highest population' show-title='false' synchronized='1' trailctrls='0' w='19763' x='79613' y='3178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A59DC242-9476-478B-B62E-71AEB86D3B40}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Countries with the highest population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1800</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.08qhhv318ptzii14anydd1p4hn91].[sum:Population:qk]</axis>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.08qhhv318ptzii14anydd1p4hn91].[none:year:ok]</field>
                </fields>
                <multibucket>
                  <bucket>1800</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08qhhv318ptzii14anydd1p4hn91].[none:Continent:nk]</field>
            <field>[federated.08qhhv318ptzii14anydd1p4hn91].[none:Population:qk]</field>
            <field>[federated.08qhhv318ptzii14anydd1p4hn91].[none:country:nk]</field>
            <field>[federated.08qhhv318ptzii14anydd1p4hn91].[none:year:ok]</field>
            <field>[federated.08qhhv318ptzii14anydd1p4hn91].[none:year:qk]</field>
            <field>[federated.08qhhv318ptzii14anydd1p4hn91].[usr:Calculation_796292759834755072:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF598AC4-8066-4CF8-ABA6-DD07292D16EF}' />
    </window>
    <window class='dashboard' maximized='true' name='Top 10 most populated countries in the world from 1800 to 2021'>
      <viewpoints>
        <viewpoint name='Countries with the highest population'>
          <current-page>
            <multibucket>
              <bucket>1800</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{638D68F0-83CE-4AE4-AFF7-90E5792FB561}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries with the highest population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 most populated countries in the world from 1800 to 2021' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3dd3yb13no8R/24gJAcIN7k6IkShQpD8lWPOMmdRJ/4iYd2bep2/Qm161v
      e7PapBnNbRv341ylrpsmtmPHsWw5nlJsy9qD4qbEvSe4QJAEQGy89w8qsmEtKqRIWTjff+x3
      AHgOhQfnnPc95z2ygCcgIQhRSr7eAQjCehIJIEQ1kQBCVBMJIEQ1ZeSmxMH9L9E9Mn1+T2bh
      Ru7dWbPsNwwF3Lyy7wgf++i9hIM+3nhlLyFDCvfdeRtKuWy14haEVaH41je+9Q/v3aFSqTEa
      dTz26JP88ef/lGyrlfgYAx3NJ3l5/wHiLWnowwv811PP0NDYSFBpICMl8fzrA94Zvvm9n/JH
      D3yUAy/9nCO9Czj7TzHmj2NDvvX8eT7nNHv3Haa4KJ+F6WHeqW2jINtKb3sDe1//LXpjEqYY
      Db99/SUOHj9NvCWNubFufv3Sy9Q31NPQ2IjFmkeCQXvuHcO8+sIvOXjsJIO2WfLzcnA7bDy3
      53lmFyWyMlJ546Vf8s7RkwyMzZCXmcwbbx2moCCPltqDODFw6sgBsnILIhK19shvWZTHYY43
      0Fp3mJde37/0+U0tZFrTee65ZzhdX09jy1kKSgp58eknae7sRqmLxWKMRyZ7972CXicvvvBr
      mjr6KSwqQiEL8eZrL1Db2klObgGj3Y2MzIdJNul4ce9rpJu1HGzoJD87g7qjb+INSex54Xnq
      G+qpb6gnoIihv/Uo+w8cpuVsOykZOXimB2josYF7gude/A31DfUMTM6Tl5LAi3v3UN/agTU7
      F71GdT6ucNDHy6++QU6uldde209+YSHD3S30T3tItRjPnSXx21ee5+3Dx6hvqKejf4ykWDkN
      XaNkp5p57dXXSE1P49fP/JyTdUt/j5zCEnTqpd/YgGeeNw4cI82k5e0TLSTqghxv7SPHmsLJ
      Q/s4cKKetMwcFmw9PLNnLw2NDXjRYtQEONLQQV5WBgB9Z+t48dV9jE/NkpZhRaNUnC+HwzbA
      U7/6NfUN9ZztHSHLoufpZ5+jrqEBuztIXmY6sxODPLfnBRYlLdYUy/ubQDIysvLZWFGKSqGh
      omIjWWnJzNu6+M6jP6MgO4Wvf/3/4Jid5FBDN1s3lvCj738P30VzK8zhYyd54IEH+bMHH+Dw
      0aMRRz2z4/z7oz/kzZOt7H70h+zdfxCXfYhv/+gn5OWk891vf4PmusM89cZJirKTefb5vVhS
      rGwuzWXfvoNU1mwnMc4Q8Xn79++jqHwLp/f/ktr2QX743W+iNVt5/dmfcLSlnzf3v05+eSWN
      B57jcN0Z9ux9lSDQeOJtWrsH2fviHjz+0Lvv6HfxHz/9CT9/bi+SBOlZ+RSmJ/D2iVaqa2rQ
      S25+e6SR6prt1FRXo1cHeeWNd8i1pvCDb/0NPRPOiDI/99+P0j0TJGDv5/SZPg6/8jRvt4yi
      WBjmB7t/QVdrLXVtPYCbnz+1B/toL9/77rfpGXdw8tA+RhxhtldXc/rQ6yTnbSTXmsrxg/sw
      WUtJVLn58X/9krH+dt48dpqR3rMMzwbYXrOdyrJiDr3xHE2Dc5hUHl5680hEXCG/lz3P/gq3
      b4H/fOyHvH60md72Bk41d0acV7JhMwrvNH3Ti1RtrmB6sJ39R2oh7OeFF37N3PwC+w6eZFvN
      dmqqtxHzniSTE2LPc8/QcPoYu3/2FI2nj9LQ0U/H6bf4xavHsej8fOsH/8b4UCddNhdVmyv4
      yb9+n4HBXl4/8O53Z6CjCZtbYnawke/8+HGk91zEn5saorF7jO0126mu3IjbPsaptiG2b9vK
      8//5f+mdnOOb3/g6yVkFPPWTf6J1cGZ5fYC2lgYqb7mbnbfdRX5CgJ4xB1MjXTzxiyexFm1A
      ddFXSSx6/Oh1WvQGAz6v94Izcsu2svfx7+DXJAHQ395M7uYd3H7bXZSlaVhQp7M5M44zA9N8
      7o8fJNZooby0GI1aT/mGDRi07/vkgIdnnv4Zoy4Fybogwwsq7v/wXXzkjh3UNTVDyMuvnv4Z
      Q3MS2ammK5a7o+EI1q33MNNxgmmXD3NSOiUFuegM8VSUl6FWyJifGeI/n3icp/a8TFgCuVLD
      1pod3FFTRmfPUMT7tbe1c//HH+RzX36YHZsLOF1Xyx9+/I948FMPcqah7qIxbNq6lWeefhIJ
      kKu0VGyoIEanJr+ojGRzPCDR1lpPa2cvRqMx4rVnGo7y+BOP886pZqpuuQuVZ4IFuYkH7rnt
      kmWOyyim/dgrzHuC7zsiIzOnkMy0ZMxJ6RTn5wDQfOwNHvrq/2LM4QZg0THGE088zpPPvUgg
      /O6rFTojGQkqjp5uJSlWzsmmsxQVFtPYUMudH/4Y993/Cdyj3Tg9QabHB6mtO42kNqBWXPgV
      TUrJ5E8+/SeM9nXx/rtYQ90tPP7E44zY3ciAebuNE7W1uEMKZAsjzGut3LvrNu7dsY265jPL
      S4BEs5nR8VFCQS9TDg/mhBiyS2v4j93/xb9/55FLvImcvOw02rt7aTt7huycnAvOUGji+O73
      f8yX/ugPADCaE5kYGyMY8DLlcKNThNn1kU/z8dsreeSRh3EFrhCoJpZ/+uGjPPuLn5NvTUEZ
      dOFweRm3jWNJtIAyhn/8wY959sknyUtJIBjwEgiE8Pp8KJXv6w4hsX//G8xNTxIMONl3qPai
      H2mxlvOTx3bzL//wd6gV55o7UpiR0RESjAkR55rMRoZHRnHP25mec5KYaGFsdJRp2zjxZgsK
      hQK3203I50NSLFXtOmM6t5cYOdwycIlCy8jLzqCxc4wvfvoTEUduv+9T7H5sN1968D4WnG4+
      ++dfo8wS5pHv/dsl/4RypZY//vg97H3tzUue816bbvkwux/9N9KNS7VxfGoRjz22m3/97jcx
      qN/7zZBRUmDlVNswH7mtkgPHz1BckEmiOZHRsVHcDjshtQGNWkFSWhaD7U184k++RIxacdHP
      nbSNojHEonhft7K8+g52P7abu2o2AJCQmMrCeDc3/cGfkZOejH9ukkV/kDHbOJbExEslgIz3
      NF0p2HI7qYFhPv/lh6i469NkmvToddqLv1KmIDbWAMh44NOf441fPsp/v3aKz3zyDyPOkyuV
      aFQKUtIzMei1xOh1pBdvY4NpkS/8+ZdJr7yH4owEnvzpj/jWPz9K/oYqtEqQy5XExMZcJHAZ
      er0ehXzpiFwTx2cfvJdH/uf/4Hj/Ih/dVYNWb0B57rgyxsIdlVb+8i++SN2Qn+qN+SgDTh75
      27/mob/+K5rbOzgz5uMzn3qAL33+85w6fpiwBEqVGoNB/7vC4rB18ldfeYivPPx3zHqCSB47
      f/93DyOlVFFTmh4R4Sc/9Tme3f0dvvzVr9E5OMH9n/wMB/b8Px75/m6+/MXPUnXLnbQdeoEv
      fPlh7v3Y/SiVKnRaLTvv+xSFyXGo1apz5YxBrVr6Ymi0ejbV3MFX/+zDPPX8yyhVKnQ6LXK5
      nCP7fs1DX3mIf/7pUxDy8L1v/S2PPf0y1Vsr3/dvJkMfG4tCpiDGoCOzeBt3bd+IRqu+4K+s
      UWvQaZf+7ZUqFXqdDmQyDHoDCrkM93QfX/nKQ/zVw48wOR9Z65eXlZOUkctN1VUYk1LJMMex
      854HGGl4nb985Nt88k8/T6xOQ0pGNn//jW9z4OVf4Q5K9DYf46GvPMQj3/kRAUnOkf3P873d
      T/PFz302IgGUShVajeb8tkKpIjE5ja/+7TfpOvYy02Ejn/lINQ/9xefpcSdwZ005sosNhZCk
      MINDw+RkZ1/wBxCEG8lFE0AQooW4ESZENZEAQlQ7f+lDkiR8hC53riDccCKu/YnOgBBtRBNI
      iGoiAYQoFhYJIESzRZEAQnQTCSBENZEAQlQTCSBENZEAQhRTiAQQoplOJIAQ3UQCCFEtMgEk
      MRpIiC6iBhCiWuRMcL8LJDEk+veiiSdiIrXwgRCZAPu+BhPN6xTKB9wXjoBKv95RCFdJNIHW
      WCCw9GyXoN9PWPS51t37H4YjXANScJF3Dhwj0ZrDbF838ZnZpBvj0MTqGBoeITkjF8doDzqz
      leyM5PUON6qIGmANzA60Ya28lY2lBaDU4vM4sI3bmB7sQpOST1dXG36/n7cPHhSz8taYqAHW
      gDGzkNNvH8abk0eC0QjaMMqQAoVKjiHWwJxWoqd9BIPBcOU3E1aVSIA1INfEc+9991zyeFrl
      zVB5ycPCNSSaQEJUEwmwiiZH+jl1upFF9wK1J04wNbvA2GA3nX3DSIAU8tNQe4p5t4/RgS66
      +ofxuuaorW0gGF5q/Y/2d9LdP4LX5aD29NL+9pYGbDNz61u4G5RoAq0iXWwCqoFeJl25pKcl
      09XVBQEvKgX4szPoa2nCWlxOa0MdICGXSUyMwtaKAhpbutm2OY+B0WlkTDIxJqeyPJfjb72C
      IacGe9sZUnfeut5FvOGIBFhNUhi5QoHHH0Ty+5FLISS5HLlcwu/1EQhLKJUKZDIJZHLksjBS
      WIZCqUQKB/F6fcjkcpbuJ8tQKpWEg34UCmXESjPC6hEJsIocM1N4FbFk6sN0D8+SlV9MyDmJ
      M6ihv7ON4oqNNNc3UlKxFedUP66wjoqUOBpaeikrSKN/3El6UjyLGMhOiqHhTD833/MJOptO
      k1VQvN7FuyGdfzq0JEl4f/M5MRTi9yWGQnwgRdYAOiMYLOsUygedaKJ8EEXWAFJQjGgUooq4
      DCpENZEAQlQTCSBEtchO8PjPkbxDlzj1AyDza8hUCVc+TxDOiVwgIzgPAft6xbIKxHRO4epE
      VRNobKAXl9fHzNQkXn8Q94KDt44cZ8Y2gc/nZXx8QszSijJRdSd4bmaa6Xk7iyE1UlcvHm+A
      xXCA0Z4hMsok2uoOMV56G1sLUtc7VGGNRFUNAIBSQ25+PipZiEAwRDi01Gzqbe8gEArhcC6u
      c4DCWoqqGqCgohJkS4PPjFXV+DwugjI1MRo1yMLMLbiIizeud5jCGoqqBFBrNOf/X6HRoHnP
      NkCSRbfWIQnr7IZrAgUDPkZHxwiHJaYnxvEFQoRDQdyL3nNnSEyd2+9xzTMzO48UDjI+bjvf
      Afa45rE7FiL2O2amcC361q9gwjVxw9UAk7YxFqZt9Pb3o9HHEegZwZqsYnhUzs5dm5ga7qZ/
      xoe/Z4Swfw6ZXIFarSMu3oDNvsiWDbnU1p4CmQKtRkdcvJ6xkWHmvRKysI9dt+8Uw95uIDdc
      DaBVKZkLakg368jKK0IlC5FTWIROqQBgwekkJ68IlcyPVhdPmsXIlCtAcUkJAZcdCKHVxZNi
      TmDaE6SopATXRDeJ1lxiVGrC61s8YZXdcAkwNDRAyLeIwZxBb/MJTGmZnG1qZnxqhKa608Sn
      5tLZeBxzei5xBgUTzhC3bMzj8KFjWLPSaGztI1YvZ2ZR4qayHA4fOk75zo/hHWtHk2BCsd4F
      FFZVxHBoz9C/gKdvvWP6/eX9IzKV+ZKHA4EAKpXqksdDoSDI5CjkN9zvgnAJN1wf4HIu9+UH
      UCii6s8h8P4JMcF5pA/y49GVschk4tdbWL7InzyFQTx9QIgq4udSiGoiAYSoFtEEUo7NIvP4
      L3piyBxL2BSzJkEJwlqJSAD5wiJyp/eiJ4b1movuF4QPshU3gc40nebEiVN4Ape+RzrnmF3p
      xwjCNbHiC982h5ttJem0tbSgU1vwBm3Yx0dIy9/IxEArlqxywovzpKcu0NzURMnN92I1alcj
      dkFYsRXXAPPTY7zy5imycxLxej3MzTvJy8tnoK+fvNwCBvv7CAQCDPcP4JydYmLWtRpxC8Kq
      WHENsOP2u0g0xjFln0cun6CgsISQa5bi0hLkoQWKS0qxJBgI+1woY41kJseuRtyCsCoi7gSH
      2wcv2QkOZJgJpZvWNDhBuNbEfQAhql1VE8jnmqWuqY2QXE1KDMwG1Wzfshmvc5b65jbCchUh
      9xzuoJKCLCOj4zOkF1RQnGXhnbfewhNUk5cZz5hthhRrDsO9vegTkth5S9W1Kp8gXNZV1QAa
      QwJaeRCFSkN+yQbUsiAA2pgE1LIAMrkMrTmZQpOBgVkvu27fgX1qkrDfi96STp5Jz5DDx67b
      bmWgo5nMjbegVYhphsL6uaoawOWYwSspkcskWhvr6R4cQ6dUY05JwY8KpUqD5LQzEFRRkm3i
      nUNHyczNp3NoitD8NMMhNUWZCbxz+Dglm7cz0HYSg1k8g0dYPyvuBC8sLBAXF3fJD/AvOgmp
      DOhUorshXH9WfBn0cl9+ALVeXPYUrl8RCRDMMEPo4kMaJK16TQIShLUUkQDhWJ1YIkmIKqJh
      LkQ1kQBCVItoAvW52nEFnRecJEfOBuO2NQtKENZKRAK0zzVi845ccJIchUgA4Ya0oibQvH2S
      hvoGFtzibq7wwbSi+wDNzW1sqKnGN93BvloXxVkp9Hb3UlSQSsfwPCkpKTgnh0jJymd8sI/4
      5Cw2lhWsVuyCsGIrqgGkwCLNjY3YZ6bJ37AN98Isbnsfg+NTlFZWMz8xhMGYRbLez+DEIi63
      mAwjXF9WVANkFpSQmZeHZ2qAUKyaSZUKY2oeGRnZxGoUZOeXYLcNMe3LpMAahynx0s/tFIT1
      EDEWaM/ILy7ZCf5iwf9e8+AE4VoT9wGEqHYVTSCJ7rZmRscmSM3KZWp8jIz8cvKsSZxtPMWE
      3cPGsjxa2rvJLixjarCdkDqeW2u24hgfoqG9h9yicmz9bUjaBFJjlQyOTVF5820Y9Zd/arMg
      XCtXVQPk5BWgVKqZs0+h1unob+8BQrhdMrYUGnmltptdH7oNW1cL2rhU1FKAINA5PMauD+1k
      tK0RvSkDZdjPyLyHm7dtYGhg8JoUTBCW46oS4LXfvIhcqycnJ4+gz0tKdir9/UMEgnOcbh2i
      MtvM4cNH0ZozmBrvZXrBzUh/H5ZYPYcPH0OfnMnkSBd25yIxYR8napswJSZfq7IJwhVdRSf4
      EYLBIOGwhFKpJBQKIZcFmZn1YElMIByWUCjkhIJBFEol4XAIZHImJyZITU0lGAyifM9+uQyC
      oTBKpVIsOiesm6voA8hQKt9tq8vlckBFcpLu3Pa5Nzy3CsvvVltJS0sD3l2d5b2rsKiUog8u
      rK+IBCiIKydFl3nBSWLRDOFGFblEkhQUE2KEqCLaIEJUEwkgRLWIPkBoZISwx3PBSTK9HqXV
      umZBCcJaiUiAxWeeIdjdc+FJZWXE/s3DaxaUIKwV0QQSotqKH4zlc0/Q3uYk4LeRkJaLc7If
      nyKGokwLZzv72FBRSnNTGynWHEoLs1chZEFYPatQA0hI4RCBYJjmllpCaDCFPEwu+vDNT9Dc
      0oUlqxyXY3jlHyUIq2xFCRBYnOfEyVYsaTrmvGHMJhO24V5GvRLSgh2tIZ74+DhidCri4hJW
      K2ZBWDUragKp9PHcfsfdAFgzswCJsdFx0jPSLzw5XSSAcP1Z5U6w7OJffkG4Ti27BpCkMM11
      J/HJY0hP0DAwNkllzS0Y1HLONJwCQyJJBjldAxNUb99C48kTpOaXk5OehG24l+7BKaqrN9Nw
      6iTpBRvw2UeZDyipqtwgRoMK6+YqagAZpRs24VpwMDkzRcjvZmZ2kaB3Fj9GnI4p+kYnqaqw
      cuDl18jYeCvjQ70A9I9OUVmaxjuv7iNr862M9bUyvQhx4Tkc4pFCwjpafgJIIY4fPUrNTTfj
      XvRTnG/FMTvN3IIXj2cev99POODHPj1LgiURx/QkgVCY6ZkZQgE/szMO4i2mpf2SgoDHzYI7
      gEZxDUsnCFdwVZ1gY0I87e2dVG3dTPfgJJlmGSGtmYJsH+jMmAxyeoenuHnnRnq72smtrGR8
      bIyaqkp6R2a4eccmervaqdp2M/6FaRYCSgwrvhMhCL+/iOHQ0z/4JzEUQogqEb+/ypwcUF24
      EowyO2vNAhKEtSQmxAhRTQyGE6KaSAAhqkX0AcZHhvG8Z0KMKdGC0SweaCvcuCIS4J39bzAy
      OHh+e8edd3Pz7bvWOiZBWDNXbAJJUhi3200gELzseXNzs7/3PkFYL1e8DRWY6ubZw4OkGORU
      lmbTPThFWX4KbQM2rNl5OG0DeCQDStkCeVk5nOnoYVNVDR1Np5l1e8hLT8IZ1JCoh0lnCJ9j
      AJkqjvKqWzAZxOLbwvpaRidYwutZRKVR4/F6sfc30NU/TcmWakaGOwnKE1D6lwb0eL0eAs5p
      jh94G1PBNixxShqa2hgdHsbr8+NdXEQdZ2JjcSYTkwvXuGiCcGVXTAC5JgZznA6dVseCc4F4
      SwpGoxGNQo7Fko7LMcSgbYqEBBMu5wJaQzzWvGKGWk4QVsVTmJdFmtWKXqcl6PUTl2BCpTEQ
      oxe//sL6u2ITSJlg5dMfu/gjURIKCzjjcpCWn0Zh7tIjFYvOHasoL7zg/Kz3rI934QMYBWHt
      rWgomkwmp2JLzWrFIghr7soJIEn0ttWhTCxG5hxlcNRO9Y5b0MjCNNWdxCczkJUUQ/fgBNtq
      ttB46iQpuaXkZ6YyNtBNz9AU26o301B7irS8Mvyzo8z5ldRUbRITYYR1t6w7wRZLPHa7m8HR
      MQqzYjlzdhxkckrKNuBZdDFgm6Z6Uw4Hf/MamZt3MDk6AMDgxAxVGzI5+Oo+cip3MjHYjt2r
      wCx3Muu9puUShGW58n0AIBQM4HK7KSksoPlMDyaTmunpGQ4fOkLFpk1IAT9jozbMGWlMjgwR
      CMPk5OTS/rEJzOkpTI4MEkRJwL3AzLwfnVgWTLgOLKMPEGZqNoTJEEKti6N0y63EKdwEtUlk
      ZWUyMTFBdXUVw+Oz1JRlMDLUjylvM7ZxG9XbtjIy4aBmQwbDg/2U5N9E0D2LK6hAL2aCCdeB
      KyaATKageMPG89sJpnePWd6zPy/HAIA1Ow+A/LxcAHKzYwDIzFnajyaJuJXFLAirJiIBMrNz
      0OkN57fNiZY1D0gQ1pKYECNENTEfQIhqIgGEqBbRB/CHgoQk6d2DcgUqhbhcI9y4IhLgtY4z
      jDvnz2/XZOawNSN7rWMShDWz6k2ggD+w2m8pCNfMCgbDhTnT1EJvVxslW28hvGhHb8pgqn+Q
      nJI8TPF6XD4Z8bG61YtWEFbZimoAj9dHelYeRblW/D4/Bw8cAmBisIvWsx1IF3nIliBcT1aU
      ACqVCpXMT0dPD/2DI8ToDajUKkrKy+gfmiJBKzrQwvVtBU0gOZu3bjm/VVpUfP7/J0d62Vpd
      tZK4BGFNXJNnMydb86/F2wrCqlvGY1Ek+np6CUkSw70ddPYtrfYohYM019din19kfLCHjp4h
      Ah4np2vr8AbCgMTYQDedvcP4PQucPl2HNxCis7WRsSnHtS6XICzLlRMg4KGzrRt/OMCgbZrZ
      /l68wHh7M7GZxbQ119I7NsOibYjjjU2UFOfQ1NqOFPTRN+7ANT7IyYZmigsyOXboTVwKE/2d
      Z9agaIJwZVd+KoRaT3qyGZlchTlGx+DYJEGfl0BQQqFUIpMtzQ2Wy2WEJRkKhQKkEF6fH7n8
      3H5kKJVKpHAIuVyJXIy3E64TV0wAz4KdGec8XZ29qFRKtu68lcG2MySXbcLe3Uxh+RaykuJQ
      mtO4eXM5za2dFFpN9NkWsFoMqBPT2b6pnJYzPdx8292oPeNY80rWomyCcEURw6GfPVMnhkII
      USXiKpBOpcKg1pzfVinEAl7CjU1MiBGimpgPIEQ1kQBCVBMJIES1iF5u19Gvs2BvP79dvOMH
      xJrFJUvhxhU5JdIzg881fn5bCvnXPCBBWEvLvs4phfycOnECmd5I9aZSJqYdJCXG43J7kStV
      LDqdqJQydLFGXI5pdPFm5GEfTref+DgDGo0GfyCIRi3mCAjXj2UnwFRvM4kFmxjr6aTu2CHs
      C/PEaPWMh41YlE6M6iAOVRqhQD+JmhDd403EqvxoAzrirPGYTYkElSYKrGLVSeH6sexOcGxi
      MsPdPcy7FwiHgmgMZizmGDZu2ow+NpasjBQyMnMILNrp7h7B6XRhsqSQajKSV1bOiRPN5GaI
      L79wfVl2DaA3Z7KtIhZvSI45wcDk5AyJiSZQqAknVKJUyIiVKbGaPoR7YR6NIRa1UoFcAufC
      DCUbylGIe2zCdeYqxjrIiE0wEXtuKzUt9d1DiqXhEwpApdCi02ojXmnSpmNKSl9ZpIJwDVy5
      CSRJuFwuJEliemIMp3tpZQspHGRsbBxJkrBPTbDo9eP3upmYtv/uhef2B/B7XExOzyJJYWxj
      YwTD0qU/TxDW0BVrgHn7BG8fb+Gjt1dQ3z6CSurhjg/dRsvpU2hiYxgdGcAVUCMP9qKUe9Er
      IaTegSk8RWv3BAT7UOJBq4Se7hjiEmIZGrdTU1WxFuUThMu6Yg0Qn5hKepKRUBjwO5EplpZ2
      8QbkFBUWMjfZT1JWEVqVDJVKT35WKo45D16Xg+TsIrRKUKn15GWm0Gebp7ikGAKua10uQViW
      KybAxEgfNts4Y7OLGDRq4o0JnD51ioK8NA4dPUnljvtZGKgnNjEViymGxj4HWlcfHkM2jt46
      4ixpJBoNtA7O87EPbebYwUOk5xZf6WMFYU1EDIeu++0XmJ9qPn+w4u4niEvaGPkKSSIQDKFS
      Xbr1FAgEUKnEImDC9e/qB8PJZJf98gPiyy98YETUAC6vnXA4eP6gUhOPXCG+zMKNK+KnXKmJ
      FzPChKgi5gMIUU0kgBDVIppAe1oaGZtfeiyK1WjkExWb1yUoQVgrEQnQNmGjY2oSAJffty4B
      CcJaWlYTyDk9gTsYua+jp2dZH+CcnSN45dMEYV0sazSoY3QAyetkb/0A1sR4VIEFzo7ZkXvm
      GZ92YElNpLNxmIQMEwb8ODwSCToJ9BZi5GEyZBm0NjRiyS6lLD/zWpdJEJZt+Z1gKUzRpir0
      iiABhY78rDTm5hfZumUT9lk7BSWbiNHJ6OvpRymTY83LY2JgAHcgwPDgEJ5FJyO2iWtYFEG4
      esuqARJzCkGtJlbSQFwxngU7NleIirx0Wtp6qK66Ce8ihKQYctLTsM0F0CoU5Cm8g5sAAALB
      SURBVJaWkJWWhFIRJiQpsWZlXevyCMJVWVYC6BOWpjLqAQxmMJv53fSWqqqlZZK0mnNnmMwk
      Zywds6S9+x5bKhNXJWBBWE3iPoAQ1S5fA0gSLSf3ETBWEh+eYNLhZnNVDQa1jMbj+5AlVYGj
      h5lZB7mFRXR092NKTOamqk00njqG3TFPbmEBnd2DmCwW/I5JXH45d334LlRixIVwHbh8DSCT
      UVpeDiGJ7v5+wn43w6M2kMkpLS+DUBiPJGPnjirOHj3Flp13IQWXpkx6kXPrzZWcPV7H1p13
      EvY4kCekUpquZ9azFkUThCu7bAJIUpDG+iZ6ezrIy84mLFOgCMzRNTBOY30zPd2dxGvVHDnW
      xNa7P0TL0bfQ6mNpbT1DvEbFsZMtbL3zNpqPvoUuIQWVx07PdJBEsXi8cJ24bBNIJlNSvesP
      qT63XQy4nQtoY2Ipyrn//Hll5/6bnpqGFA7hcnuIjY15z/7fdZlLVzN2QVixq14CxhAbd9nj
      MrmC2NiY3zsgQVhLEQnwqc1bcZ4bAxSn0V70BYJwIxFLJAlRTdwHEKKaSAAhqkX0AewT4/h8
      S9fxE1PSUWtFP0C4sUUkwOTIEAtzDgBi4o0iAYQb3vKaQJJE59lmBkfeHc7snZ/E7g4ihUPM
      zb+7urzL5Vz1IAXhWlnefQApRP+4ncRJOyHJw2B7B3k5ydjDHuwaOQRdNNUdJzOniHfe3sfd
      993PSH8vcUkZTPf2ENTruWvXzmtcFEG4esvuBNuG+wjFmQjMzeJz2ui1zXHo8HHSU0w4XS4M
      Oj1zLh8bN1Vg1kl4AmF627uJiUsiLkasCyZcn5ZXA8jk7Nh1JwW5OfR3nCE20UpKZjZl5ZXY
      bDMkJVmwDY0QExNDUHIxOedBqVSRk5uCOT4eSSlmBQvXp4gbYY2nj57vBJdWbSfOaFrX4ATh
      Wvv/w/rM8dimwCUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
